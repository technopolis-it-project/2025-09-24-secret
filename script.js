// –ö–ª—é—á 2: 0JrQu9GO0YcgMjogNUxzekFtdnQ=

function decodeMessage() {
    const key1 = document.getElementById('key1').value.trim();
    const key2 = document.getElementById('key2').value.trim();

    if (!key1 || !key2) {
        alert('–í–≤–µ–¥–∏—Ç–µ –æ–±–∞ –∫–ª—é—á–∞!');
        return;
    }

    const url = `https://${key1}${key2}`;
    console.log('–°–æ–±—Ä–∞–Ω–Ω—ã–π URL:', url);

    fetch(url)
        .then(response => {
            if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
            return response.text();
        })
        .then(base64Data => {
            const decodedMessage = atob(base64Data);

            document.getElementById('output').innerHTML =
                '<p style="color: green;">‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞.</p>';

            console.log('üîê –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:');
            console.log(decodedMessage);

            console.log('DECODED_MESSAGE:', decodedMessage);
        })
        .catch(error => {
            document.getElementById('output').innerHTML =
                `<p style="color: red;">‚ùå –û—à–∏–±–∫–∞: ${error.message}</p>`;
            console.error('–û—à–∏–±–∫–∞:', error.message);
        });
}